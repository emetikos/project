version: "3.4"
services:

    db:
      image: mariadb:10.3
      container_name: dmh-db
      volumes:
        - ./dbdata/mysql:/var/lib/mysql
      environment:
        - MYSQL_ROOT_PASSWORD=root
        - MYSQL_DATABASE=default
        - MYSQL_USER=user
        - MYSQL_PASSWORD=password
      ports:
        - "3306:3306"

    phpmyadmin:
      container_name: phpMyAdmin
      image: phpmyadmin
      ports:
        - "8181:80"
      environment:
        - SESSION_TIMEOUT=604800 # 7 days session timeout
#        - PMA_ARBITRARY=1 # Uncomment this if you want to be able to choose the db container e.g. "db"
      depends_on:
        - db

    mailhog:
      image: mailhog/mailhog:latest
      container_name: dmh-mailhog
      volumes:
        - ./maildir:/maildir
      command: ["-storage=maildir", "-maildir-path=/maildir"]
      ports:
        - "1025:1025"
        - "3001:8025"

    nginx:
      container_name: nginX
      build:
        context: ./nginx
#        args:
#          - CHANGE_SOURCE=${CHANGE_SOURCE}
#          - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
#          - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
#          - http_proxy
#          - https_proxy
#          - no_proxy
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
        - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
        - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
        - ${NGINX_SSL_PATH}:/etc/nginx/ssl
      ports:
        - "${NGINX_HOST_HTTP_PORT}:80"
        - "${NGINX_HOST_HTTPS_PORT}:443"
      depends_on:
        - php
      networks:
        default:
        my_network:
          aliases:
            - users-attendance.local
            - users-info-api.local
            - hap-info-api.local


    php:
      build: ./php-fpm
      container_name: dmh-php
      working_dir: /var/www
      volumes:
        - ..:/var/www
        - ./php-fpm/php-ini-overrides.ini:/etc/php/7.4/fpm/conf.d/99-overrides.ini
      networks:
        - default
        - my_network

    redis:
      image: redis:alpine
      container_name: dmh-redis

networks:
  default:
  my_network:
    driver: bridge

#    memcached:
#      image: memcached:alpine
#      container_name: dmh-memcached

#    elasticsearch:
#      image: elasticsearch:6.5.4
#      container_name: dmn-elasticsearch

#    ### MongoDB ##############################################
#    ### when working in Windows Docker, mongoDB has a known issue and cannot share
#    ### volumes the normal way. The workaround is to use a named volume as below
#    mongo:
#      build: ./mongo
#      container_name: dmh-mongo
#      ports:
#        - "27017:27017"
#      environment:
#        - MONGO_INITDB_ROOT_USERNAME=root
#        - MONGO_INITDB_ROOT_PASSWORD=root
#      volumes:
#        - mongodata:/data/db
#
#volumes:
#  mongodata:

